// <auto-generated />
using System;
using OAuthApp.Tenant;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace OAuthApp.Data.Migrations.Tenant
{
    [DbContext(typeof(TenantDbContext))]
    [Migration("20200805042713_InitialTenantDbMigration")]
    partial class InitialTenantDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CacheDuration")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityServerIssuerUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppTenants");
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppTenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppTenantId");

                    b.ToTable("AppTenantClaims");
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantHost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppTenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppTenantId");

                    b.ToTable("AppTenantHosts");
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppTenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppTenantId");

                    b.ToTable("AppTenantProperties");
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantClaim", b =>
                {
                    b.HasOne("IdentityServer4.MicroService.Tenant.AppTenant", null)
                        .WithMany("Claims")
                        .HasForeignKey("AppTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantHost", b =>
                {
                    b.HasOne("IdentityServer4.MicroService.Tenant.AppTenant", null)
                        .WithMany("Hosts")
                        .HasForeignKey("AppTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IdentityServer4.MicroService.Tenant.AppTenantProperty", b =>
                {
                    b.HasOne("IdentityServer4.MicroService.Tenant.AppTenant", null)
                        .WithMany("Properties")
                        .HasForeignKey("AppTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
