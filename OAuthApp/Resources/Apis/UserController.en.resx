<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="0.1-99之内" xml:space="preserve">
    <value>Within 0.1-99 bytes</value>
  </data>
  <data name="1-10个字节之内" xml:space="preserve">
    <value>Within 1-10 bytes</value>
  </data>
  <data name="1-2000个字节之内" xml:space="preserve">
    <value>Within 1-2000 bytes</value>
  </data>
  <data name="1-500个字节之内" xml:space="preserve">
    <value>Within 1-500 bytes</value>
  </data>
  <data name="1-512个字节之内" xml:space="preserve">
    <value>Within 1-512 bytes</value>
  </data>
  <data name="1-999之内" xml:space="preserve">
    <value>Within 1-999 bytes</value>
  </data>
  <data name="2-50个字节之内" xml:space="preserve">
    <value>Within 2-50 bytes</value>
  </data>
  <data name="发送过于频繁,请{0}秒后重试" xml:space="preserve">
    <value>Send too frequently, please retry after {0} seconds</value>
  </data>
  <data name="手机号已被注册" xml:space="preserve">
    <value>The cell phone number has been registered</value>
  </data>
  <data name="手机号码格式错误" xml:space="preserve">
    <value>Your phone number format error</value>
  </data>
  <data name="无效的手机验证码" xml:space="preserve">
    <value>Invalid phone verify code</value>
  </data>
  <data name="无效的邮箱验证码" xml:space="preserve">
    <value>Invalid email verify code</value>
  </data>
  <data name="电话号码格式错误" xml:space="preserve">
    <value>The phone number format error</value>
  </data>
  <data name="该号码已达24小时发送上限" xml:space="preserve">
    <value>The Phone has reached the upper limit of 24 hours</value>
  </data>
  <data name="请填写个人介绍" xml:space="preserve">
    <value>Please Input your details</value>
  </data>
  <data name="请填写体重" xml:space="preserve">
    <value>Please Input your weight</value>
  </data>
  <data name="请填写出生年月" xml:space="preserve">
    <value>Please choose your birthday</value>
  </data>
  <data name="请填写姓名" xml:space="preserve">
    <value>Please Input your name</value>
  </data>
  <data name="请填写手机号码" xml:space="preserve">
    <value>Please Input your phone number</value>
  </data>
  <data name="请填写手机验证码" xml:space="preserve">
    <value>Please Input your phone verify code</value>
  </data>
  <data name="请填写联系地址" xml:space="preserve">
    <value>Please Input your address</value>
  </data>
  <data name="请填写联系邮箱" xml:space="preserve">
    <value>Please Input your email address</value>
  </data>
  <data name="请填写身高" xml:space="preserve">
    <value>Please Input your stature</value>
  </data>
  <data name="请填写邮箱证码" xml:space="preserve">
    <value>Please Input your email verify code</value>
  </data>
  <data name="请选择性别" xml:space="preserve">
    <value>Please choose your gender</value>
  </data>
  <data name="邮箱已被注册" xml:space="preserve">
    <value>The mailbox has been registered</value>
  </data>
  <data name="邮箱格式错误" xml:space="preserve">
    <value>Your email address format error</value>
  </data>
  <data name="验证码格式错误" xml:space="preserve">
    <value>Your phone verify code format error</value>
  </data>
</root>